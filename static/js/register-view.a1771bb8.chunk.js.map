{"version":3,"sources":["views/RegisterView/RegisterView.jsx"],"names":["RegisterView","state","name","email","password","onInputChange","event","input","target","setState","dataset","role","value","onRegisterSubmit","preventDefault","props","registerSubmit","reset","className","onSubmit","this","data-role","type","onChange","required","React","Component","connect","dispatch","credentials","authOps","register"],"mappings":"6PAIMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,cAAgB,SAACC,GACf,IAAMC,EAAQD,EAAME,OACpB,EAAKC,SAAL,eAAiBF,EAAMG,QAAQC,KAAOJ,EAAMK,S,EAG9CC,iBAAmB,SAACP,GAClBA,EAAMQ,iBACN,EAAKC,MAAMC,eAAe,EAAKf,OAC/BK,EAAME,OAAOS,S,4CAGf,WACE,OACE,sBAAKC,UAAU,YAAf,UACE,0CACA,uBAAMA,UAAU,YAAYC,SAAUC,KAAKP,iBAA3C,UACE,wBAAOK,UAAU,aAAjB,iBAEE,uBACEA,UAAU,aACVG,YAAU,OACVC,KAAK,OACLC,SAAUH,KAAKf,cACfmB,UAAQ,OAGZ,wBAAON,UAAU,aAAjB,mBAEE,uBACEA,UAAU,aACVG,YAAU,QACVC,KAAK,OACLC,SAAUH,KAAKf,cACfmB,UAAQ,OAGZ,wBAAON,UAAU,aAAjB,qBAEE,uBACEA,UAAU,aACVG,YAAU,WACVC,KAAK,OACLC,SAAUH,KAAKf,cACfmB,UAAQ,OAGZ,wBAAQF,KAAK,SAAb,gC,GArDiBG,IAAMC,WAkElBC,cAAQ,MANI,SAACC,GAAD,MAAe,CACxCZ,eAAgB,SAACa,GACfD,EAASE,IAAQC,SAASF,QAIfF,CAAkC3B","file":"static/js/register-view.a1771bb8.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport authOps from \"../../redux/auth/auth-operations\";\n\nclass RegisterView extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  onInputChange = (event) => {\n    const input = event.target;\n    this.setState({ [input.dataset.role]: input.value });\n  };\n\n  onRegisterSubmit = (event) => {\n    event.preventDefault();\n    this.props.registerSubmit(this.state);\n    event.target.reset();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Register</h1>\n        <form className=\"inputForm\" onSubmit={this.onRegisterSubmit}>\n          <label className=\"inputLabel\">\n            Name\n            <input\n              className=\"inputField\"\n              data-role=\"name\"\n              type=\"text\"\n              onChange={this.onInputChange}\n              required\n            />\n          </label>\n          <label className=\"inputLabel\">\n            E-mail\n            <input\n              className=\"inputField\"\n              data-role=\"email\"\n              type=\"text\"\n              onChange={this.onInputChange}\n              required\n            />\n          </label>\n          <label className=\"inputLabel\">\n            Password\n            <input\n              className=\"inputField\"\n              data-role=\"password\"\n              type=\"text\"\n              onChange={this.onInputChange}\n              required\n            />\n          </label>\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  registerSubmit: (credentials) => {\n    dispatch(authOps.register(credentials));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}